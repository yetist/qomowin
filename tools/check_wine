#!/bin/bash

set -x
#Required programs
nsis_url="http://downloads.sourceforge.net/project/nsis/NSIS%202/2.46/nsis-2.46-setup.exe"
#nsis_md5="5e02441c7f3fa4da4f4928a2d42a07c3"
nsis_md5="d41d8cd98f00b204e9800998ecf8427e"

p7zip_url="http://heanet.dl.sourceforge.net/sourceforge/sevenzip/7z464.exe"
p7zip_md5="d2810e3dd4b60ab05fe7c29a50921efa"

mfc42_url="http://download.microsoft.com/download/vc60pro/update/1/w9xnt4/en-us/vc6redistsetup_enu.exe"
mfc42_md5="dd50945bcf3e09e22453be43684f3d39"

enumini_url="http://nsis.sourceforge.net/mediawiki/images/6/62/EnumINI.zip"
enumini_md5="e1c7babca1d6d86f628fdaa8b7546408"

osslsigncode_url="http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/1.3.1/osslsigncode-1.3.1.tar.gz"
osslsigncode_md5="1f2b818012a3e73ec6dac22ec09c8cf3"

syslinux_url="http://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-4.04.zip"
syslinux_md5="5e1347a83b76f12b23b2250b7e8a54f1"

root="$(cd ${0%/*}/../;pwd)"
export WINEPREFIX="$root"/wine

if which yum >/dev/null 2>&1 ; then
	pman="yum install -y "
elif which pacman >/dev/null 2>&1 ; then
	pman="pacman -S --noconfirm "
fi

download(){
	wget -q -P /tmp -O "$2" "$1"
	md5=$(md5sum $2)
	md5=${md5%% *}
	if [ ! "$md5" = "$3" ]; then
		echo "Invalid download for $1, md5 does not match"
		exit 1
	fi
}

install_wine(){
	if [ ! -x /usr/bin/wine -a ! -x /usr/local/bin/wine ]; then
		echo "Installing wine..."
		sudo $pman wine #TBD do not assume apt
	fi
	#echo "Creating wine folder..."
	#wineprefixcreate --prefix "$WINEPREFIX"
}

install_7z(){
	echo "Installing 7z..."
	download "$p7zip_url" "/tmp/p7zip.exe" "$p7zip_md5"
	wine "/tmp/p7zip.exe"
}

install_nsis(){
	echo "Installing nsis..."
	download "$nsis_url" "/tmp/nsis.exe" "$nsis_md5"
	wine "/tmp/nsis.exe"
}

install_enumini(){
	echo "Installing EnumINI..."
	download "$enumini_url" "/tmp/enumini.zip" "$enumini_md5"

	nsis_dir=`find $WINEPREFIX/drive_c/ -type d -name NSIS | head -n1`
	unzip -o /tmp/enumini.zip -d "$nsis_dir"
}

install_zip(){
	if [ ! -x /usr/bin/zip -a ! -x /usr/local/bin/zip ]; then
		echo "Installing zip..."
		sudo $pman zip #TBD do not assume apt
	fi
}

install_unzip(){
	if [ ! -x /usr/bin/unzip -a ! -x /usr/local/bin/unzip ]; then
		echo "Installing unzip..."
		sudo $pman unzip #TBD do not assume apt
	fi
}

install_png2ico(){
	if [ ! -x /usr/bin/png2ico -a ! -x /usr/local/bin/png2ico ]; then
		echo "Installing png2ico..."
		sudo $pman png2ico #TBD do not assume apt
	fi
}

install_cabextract(){
	if [ ! -x /usr/bin/cabextract -a ! -x /usr/local/bin/cabextract ]; then
		echo "Installing cabextract..."
		sudo $pman cabextract #TBD do not assume apt
	fi
}

install_cert(){
	echo "Installing mfc42..."
	download "$mfc42_url" "/tmp/vc6redistsetup_enu.exe" "$mfc42_md5"
	wine "/tmp/vc6redistsetup_enu.exe" '/T:C:\winetrickstmp' /c
	mv $WINEPREFIX/dosdevices/c:/winetrickstmp/vcredist.exe /tmp
	rm -f $WINEPREFIX/dosdevices/c:/windows/system32/comcat.dll
	rm -f $WINEPREFIX/dosdevices/c:/windows/system32/msvcrt.dll
	rm -f $WINEPREFIX/dosdevices/c:/windows/system32/oleaut32.dll
	rm -f $WINEPREFIX/dosdevices/c:/windows/system32/olepro32.dll
	rm -f $WINEPREFIX/dosdevices/c:/windows/system32/stdole2.tlb
	wine /tmp/vcredist.exe
	/usr/bin/cabextract /tmp/vcredist.exe -d $WINEPREFIX/dosdevices/c:/windows/system32/ -F mfc42u.dll
	cat > /tmp/override-dll.reg <<EOF
REGEDIT4

[HKEY_CURRENT_USER\Software\Wine\DllOverrides]
"*msvcrt"="native,builtin"
EOF
	wine regedit "/tmp/override-dll.reg"
	rm /tmp/override-dll.reg
	rm -rf '$WINEPREFIX/dosdevices/c:/winetrickstmp/*'
}

install_osslsigncode(){
	if [ ! -e "$root/tools/osslsigncode" ]; then
		download "$osslsigncode_url" "/tmp/osslsigncode.tar.gz" "$osslsigncode_md5"
		tmpdir=`mktemp -d`
		tar -xf /tmp/osslsigncode.tar.gz -C $tmpdir
		cd $tmpdir/osslsigncode*
		./configure
		make
		cp -f osslsigncode $root/tools
		rm -rf $tmpdir
	fi
}

install_grubutil(){
	if [ ! -e "$root/tools/grubinst" ]; then
		tmpdir=`mktemp -d`
		svn export --force svn://svn.gna.org/svn/grubutil/trunk $tmpdir
		cd $tmpdir/grubinst
		make
		cp -f grubinst $root/tools
		rm -rf $tmpdir
	fi
}

install_syslinux(){
	echo "Installing syslinux..."
	download "$syslinux_url" "/tmp/syslinux.zip" "$syslinux_md5"
	unzip -o /tmp/syslinux.zip win32/syslinux.exe -d /tmp
	cp /tmp/win32/syslinux.exe $root/tools
}

make_wine(){
	install_wine
	install_zip
	install_unzip
	install_png2ico
	install_nsis
	install_enumini
	install_7z
	#install_osslsigncode
	install_grubutil
	install_syslinux
	#install_cabextract
	#install_cert
}

if [ ! -e "$root/wine" ]; then
	make_wine
fi
